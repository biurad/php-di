<?php

declare (strict_types=1);

/**
 * @internal This class has been auto-generated by the Rade DI.
 */
class AliasContainer extends Rade\DI\Container
{
    protected static array $privates;

    public array $parameters = [];

    protected array $methodsMap = ['service_1' => 'getService1', 'service_2' => 'getService2', 'service_3' => 'getService3', 'service_6' => 'getService6'];

    protected array $types = [Psr\Container\ContainerInterface::class => ['container'], Rade\DI\AbstractContainer::class => ['container'], Rade\DI\Container::class => ['container'], Rade\DI\Tests\Fixtures\Service::class => ['service_6']];

    protected array $aliases = ['alias_1' => 'service_1', 'alias_2' => 'service_2', 'alias_3' => 'service_3', 'alias_6' => 'service_6'];

    public function __construct()
    {
        parent::__construct();
        self::$privates = [];
    }

    protected function getService1(): Rade\DI\Tests\Fixtures\Service
    {
        return self::$services['service_1'] = new Rade\DI\Tests\Fixtures\Service();
    }

    protected function getService2()
    {
        return 123;
    }

    protected function getService3(): Rade\DI\Tests\Fixtures\Service
    {
        return new Rade\DI\Tests\Fixtures\Service();
    }

    protected function getService4(): Rade\DI\Tests\Fixtures\Service
    {
        return self::$privates['service_4'] = new Rade\DI\Tests\Fixtures\Service();
    }

    protected function getService5(): Rade\DI\Tests\Fixtures\Service
    {
        return self::$privates['service_5'] = $this->resolver->resolve(Rade\DI\Tests\Fixtures\Service::class);
    }

    protected function getService6(): Rade\DI\Tests\Fixtures\Service
    {
        return self::$services['service_6'] = new Rade\DI\Tests\Fixtures\Service();
    }
}
